# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Transaction {
  """Transaction ID"""
  id: ID!

  """Account ID"""
  accountId: ID!

  """Transaction amount"""
  amount: Int!

  """Category ID"""
  categoryId: ID!

  """Creation date"""
  createdAt: DateTime!
  currency: Currency!

  """Custom icon"""
  customIcon: String

  """Transaction date"""
  date: DateTime!

  """Transaction description"""
  description: String

  """Transaction notes"""
  notes: String

  """Recurring transaction ID"""
  recurrence: RecurrenceType!

  """Recurring transaction ID"""
  tagIds: [String!]!

  """Transaction type"""
  type: TransactionType!

  """Last updated date"""
  updatedAt: DateTime!

  """User ID"""
  userId: ID!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum Currency {
  VND
  USD
}

"""Recurrence type for transactions"""
enum RecurrenceType {
  OFF
  REPEAT
  INSTALLMENT
}

"""Type of transaction"""
enum TransactionType {
  INCOME
  EXPENSE
  TRANSFER
}

type Account {
  """Account identifier"""
  id: ID!

  """Creation date"""
  createdAt: DateTime!

  """Account currency"""
  currency: Currency!

  """Account name"""
  name: String!

  """Account type"""
  type: AccountType!

  """Last updated date"""
  updatedAt: DateTime!

  """User identifier"""
  userId: ID!
  transactions: [Transaction!]!
}

enum AccountType {
  BANK
  CREDIT
  WALLET
}

type Budget {
  """Example field (placeholder)"""
  exampleField: Int!
}

type User {
  """User identifier"""
  id: ID!

  """User email"""
  email: String!

  """User name"""
  name: String

  """User password"""
  password: String!

  """Creation date"""
  createdAt: DateTime!

  """Last updated date"""
  updatedAt: DateTime!

  """User accounts"""
  accounts: [Account!]!

  """User transactions"""
  transactions: [Transaction!]!

  """User budgets"""
  budgets: [Budget!]!
}

type Query {
  users: [User!]!
  user(id: ID!): User!
  accounts: [Account!]!
  account(id: ID!): Account!
  transactions: [Transaction!]!
  transaction(id: Int!): Transaction!
  userTransactions(id: ID!): [Transaction!]!
  accountTransactions(id: ID!): [Transaction!]!
  budgets: [Budget!]!
  budget(id: Int!): Budget!
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: ID!): User!
  createAccount(createAccountInput: CreateAccountInput!): Account!
  updateAccount(updateAccountInput: UpdateAccountInput!): Account!
  removeAccount(id: ID!): Account!
  createTransaction(createTransactionInput: CreateTransactionInput!): Transaction!
  updateTransaction(updateTransactionInput: UpdateTransactionInput!): Transaction!
  removeTransaction(id: ID!): Transaction!
  createBudget(createBudgetInput: CreateBudgetInput!): Budget!
  updateBudget(updateBudgetInput: UpdateBudgetInput!): Budget!
  removeBudget(id: Int!): Budget!
}

input CreateUserInput {
  email: String!
  name: String!
  password: String!
}

input UpdateUserInput {
  email: String
  name: String
  password: String
  id: String!
}

input CreateAccountInput {
  currency: Currency!
  name: String!
  type: AccountType!
}

input UpdateAccountInput {
  currency: Currency
  name: String
  type: AccountType
  id: String!
}

input CreateTransactionInput {
  account: AccountType!
  amount: Float!
  category: CreateCategoryInput!
  currency: Currency!
  customIcon: String
  date: DateTime!
  description: String
  notes: String
  recurrence: RecurrenceType!
  type: TransactionType!
  user: CreateUserInput!
}

input CreateCategoryInput {
  name: String!
  icon: String
}

input UpdateTransactionInput {
  account: AccountType
  amount: Float
  category: CreateCategoryInput
  currency: Currency
  customIcon: String
  date: DateTime
  description: String
  notes: String
  recurrence: RecurrenceType
  type: TransactionType
  user: CreateUserInput
  id: String!
}

input CreateBudgetInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateBudgetInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}